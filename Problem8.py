# Sets value for 1000 digit number
num = '73167176531330624919225119674426574742355349194934969835203127745063262\
39578318016984801869478851843858615607891129494954595017379583319528532\
08805511125406987471585238630507156932909632952274430435576689664895044\
52445231617318564030987111217223831136222989342338030813533627661428280\
64444866452387430358907296290491560440772390713810515859307960866701724\
27121883998797908792274921901699720888093776657273330010533678812202354\
21809751254540594752243525849077116705560136048395864467063244157221553\
97536978179778461740649551492908625693219784686224828397224137565705605\
74902614079729686524145351004748216637048440319989000889524345065854122\
75886668811642717147992444292823086346567481391912316282458617866458359\
12456652947654568284891288314260769004224219022671055626321111109370544\
21750694165896040807198403850962455444362981230987879927244284909188845\
80156166097919133875499200524063689912560717606058861164671094050775410\
02256983155200055935729725716362695618826704282524836008232575304207529\
63450'

# Sets variables to store current product and the max
product = 1
product_total = 0

# Loops through all possible 13 digit combinations
for i in range(len(num) - 12):
    for val in num[i:i+13]:
        product = product * int(val)
    
    # Checks for maximal value
    if product > product_total:
        product_total = product
    
    # Resets starting conditions 
    product = 1

# Prints answer
print("Greatest product of 13 digits in given number is: {}".format(product_total))